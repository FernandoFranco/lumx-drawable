{"version":3,"sources":["_lxpp.js","directives/drawerlayout.js","directives/drawernavigator.js","directives/draweruser.js","directives/scrollbar.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lxpp.js","sourcesContent":["/**\r\n * Fernando Franco\r\n * Angular Module\r\n */\r\n(function (angular) {\r\n    'use strict';\r\n    angular.module('lxpp', ['lumx']);\r\n\r\n    angular.module('lxpp').run(lxppRun);\r\n\r\n    lxppRun.$inject = [];\r\n\r\n    function lxppRun() {\r\n        \r\n    }\r\n})(angular);","/**\r\n * Fernando Franco\r\n * Directive Drawerlayout\r\n */\r\n(function (angular) {\r\n    'use strict';\r\n    angular.module('lxpp').directive('lxDrawerLayout', lxDrawerLayout);\r\n\r\n    lxDrawerLayout.$inject = ['$rootScope'];\r\n\r\n    function lxDrawerLayout($rootScope) {\r\n        return {\r\n            link: _link,\r\n            replace: true,\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: {\r\n                drawerType: '@',\r\n                toolbarBgc: '@',\r\n                configMenus: '=',\r\n                drawerUsers: '=',\r\n                toolbarTheme: '@',\r\n                navigatorMenus: '=',\r\n                drawerBackground: '@'\r\n            },\r\n            template:'<div class=\"drawerlayout\" ng-class=\"{\\'drawer-active\\': active}\"><div id=\"lxpp-toolbar\"><div class=\"toolbar z4\" ng-class=\"toolbarBgc\"><div class=\"toolbar__left\"><lx-button class=\"toogle-button mr\" lx-size=\"l\" lx-color=\"{{toolbarThemeObj.color}}\" lx-type=\"icon\" ng-click=\"setActive();\"><i class=\"mdi mdi-menu\"></i></lx-button></div><span class=\"ml toolbar__label fs-title {{toolbarThemeObj.textColor}}\">Lorem Ipsum</span></div></div><div id=\"lxpp-navigator\" ng-click=\"active = (drawerType === \\'temporary\\') ? !active : active;\"><div ng-click=\"stopPropagation($event);\" layout=\"column\" item><div layout=\"column\" item><div overflow=\"auto\" lx-scroll><lx-drawer-user users=\"drawerUsers\" background=\"{{drawerBackground}}\" min-drawer=\"drawerType !== \\'temporary\\'\"></lx-drawer-user><lx-drawer-navigator menus=\"navigatorMenus\"></lx-drawer-navigator></div></div><div class=\"config-menus\" ng-if=\"configMenus\"><lx-drawer-navigator menus=\"configMenus\"></lx-drawer-navigator></div></div></div><div id=\"lxpp-content\"><div overflow=\"scroll\" lx-scroll ng-transclude></div></div></div>'\r\n        }\r\n\r\n        ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n        function _link($scope, $element, $attrs, $ctrl, $transclude) {\r\n            $scope.$watch('configMenus', _onChangeConfigMenus);\r\n            $attrs.$observe('toolbarTheme', _onChangeToolbarTheme);\r\n            $rootScope.$on('drawer:active', _onDrawerActive);\r\n\r\n            $scope.setActive = _setActive;\r\n            $scope.stopPropagation = _stopPropagation;\r\n\r\n            ////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n            function _onChangeConfigMenus(newConfigMenus) {\r\n                if (newConfigMenus[0] && !newConfigMenus[0].items) {\r\n                    $scope.configMenus = [{items: newConfigMenus}];\r\n                }\r\n            }\r\n\r\n            function _onChangeToolbarTheme(newTheme) {\r\n                $scope.toolbarThemeObj = {\r\n                    color: newTheme === 'dark' ? 'white' : 'black',\r\n                    textColor: newTheme === 'dark' ? 'tc-white' : 'tc-black',\r\n                };\r\n            }\r\n\r\n            function _onDrawerActive($event, active) {\r\n                $scope.active = active;\r\n            }\r\n\r\n            function _setActive() {\r\n                $rootScope.$broadcast('drawer:active', true);\r\n            }\r\n\r\n            function _stopPropagation($event) {\r\n                $event.preventDefault();\r\n                $event.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n})(angular);","/**\r\n * Fernando Franco\r\n * Directive DrawerNavigator\r\n */\r\n(function (angular) {\r\n    'use strict';\r\n    angular.module('lxpp').directive('lxDrawerNavigator', lxDrawerNavigator);\r\n\r\n    lxDrawerNavigator.$inject = ['$rootScope'];\r\n\r\n    function lxDrawerNavigator($rootScope) {\r\n        return {\r\n            link: _link,\r\n            replace: true,\r\n            restrict: 'E',\r\n            scope: {\r\n                menus: '='\r\n            },\r\n            template:'<div class=\"drawernavigator mt mb\"><ul class=\"list\" ng-repeat=\"group in menus\"><li class=\"list-subheader\" ng-bind=\"group.header\"></li><li ng-repeat=\"item in group.items\" class=\"list-row list-row--is-clickable\" lx-ripple=\"black\" ng-click=\"navigateHandler(item);\"><div class=\"list-row__primary\" ng-if=\"item.icon || item.avatar\"><img ng-src=\"{{item.avatar}}\" ng-if=\"item.avatar\" width=\"40\" height=\"40\" class=\"img-round\"><lx-icon ng-if=\"!item.avatar\" lx-id=\"{{item.icon}}\" lx-size=\"s\" lx-color=\"{{item.iconColor || \\'grey\\'}}\" lx-type=\"flat\"></lx-icon></div><div class=\"list-row__content\"><span>{{item.label}}</span></div><div class=\"list-row__secondary\" ng-if=\"item.info\"><lx-icon lx-id=\"{{item.info}}\" lx-size=\"xs\" lx-color=\"{{item.infoColor || \\'grey\\'}}\" lx-type=\"flat\"></lx-icon></div></li></ul></div>'\r\n        };\r\n\r\n        ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n        function _link($scope, $element, $attrs, $ctrl, $transclude) {\r\n            var tempActive = false;\r\n            var orinalMenu = [];\r\n\r\n            $scope.navigateHandler = _navigateHandler;\r\n\r\n            $scope.$watch('menus', _onChangeMenus);\r\n            $rootScope.$on('drawernavigator:temp', _onTempMenu);\r\n            $rootScope.$on('drawernavigator:original', _onOriginalMenu);\r\n\r\n            ////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n            function _onChangeMenus(newMenus) {\r\n                if (!tempActive) {\r\n                    orinalMenu = newMenus;\r\n                }\r\n            }\r\n\r\n            function _onTempMenu($event, tempMenu) {\r\n                tempActive = true;\r\n                $scope.menus = tempMenu;\r\n            }\r\n\r\n            function _onOriginalMenu() {\r\n                tempActive = false;\r\n                $scope.menus = orinalMenu;\r\n            }\r\n\r\n            function _navigateHandler(menuItem) {\r\n                if (menuItem.handler) {\r\n                    if (menuItem.handler()) {\r\n                        $rootScope.$broadcast('drawer:active', false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n})(angular);","/**\r\n * Fernando Franco\r\n * Directive Userlayout\r\n */\r\n(function (angular) {\r\n    'use strict';\r\n    angular.module('lxpp').directive('lxDrawerUser', lxDrawerUser);\r\n\r\n    lxDrawerUser.$inject = ['$rootScope'];\r\n\r\n    function lxDrawerUser($rootScope) {\r\n        return {\r\n            link: _link,\r\n            replace: true,\r\n            restrict: 'E',\r\n            scope: {\r\n                users: '=',\r\n                minDrawer: '=',\r\n                background: '@'\r\n            },\r\n            template:'<div ng-class=\"{\\'min\\': minDrawer}\" id=\"drawer-user\" ng-click=\"toggleUsers();\"><div class=\"drawer-user__max\"><img class=\"user-background\" ng-src=\"{{background}}\"> <img class=\"user-avatar z1\" ng-src=\"{{user.image}}\"></div><div class=\"toolbar bgc-white\"><div class=\"toolbar__left mr+\"><img class=\"user-avatar z1\" ng-src=\"{{user.image}}\"></div><div class=\"toolbar__label\"><span class=\"fs-body-2\" ng-bind=\"user.name\"></span><lx-icon lx-id=\"{{menuIcon}}\" lx-size=\"s\" lx-color=\"grey\" lx-type=\"flat\"></lx-icon></div><div class=\"toolbar__right\"><lx-button class=\"toogle-button\" lx-size=\"l\" lx-color=\"grey\" lx-type=\"icon\" ng-click=\"hideDrawer($event);\"><i class=\"mdi mdi-chevron-left\"></i></lx-button></div></div></div>'\r\n        }\r\n\r\n        ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n        function _link($scope, $element, $attrs, $ctrl, $transclude) {\r\n            var menuDown = 'menu-down';\r\n            var menuUp = 'menu-up';\r\n            var showUsers = false;\r\n\r\n            $scope.user = null;\r\n            $scope.menuIcon = menuDown;\r\n\r\n            $scope.hideDrawer = _hideDrawer;\r\n            $scope.toggleUsers = _toggleUsers;\r\n\r\n            $scope.$watch('users', _onChangeUsers);\r\n\r\n            ////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n            function _onChangeUsers(newUsers) {\r\n                if (!newUsers) {\r\n                    $scope.user = null;\r\n                    return;\r\n                }\r\n                \r\n                if (!(newUsers instanceof Array)) {\r\n                    $scope.users = [newUsers];\r\n                }\r\n\r\n                $scope.users.forEach(function(user) {\r\n                    if (user.active) {\r\n                        $scope.user = user;\r\n                    }\r\n                });\r\n\r\n                if (!$scope.user) {\r\n                    $scope.user = $scope.users[0] || null;\r\n                }\r\n            }\r\n\r\n            function _toggleUsers() {\r\n                if (showUsers) {\r\n                    showUsers = false;\r\n                    $scope.menuIcon = menuDown;\r\n                    return $rootScope.$broadcast('drawernavigator:original');\r\n                }\r\n\r\n                var tempMenu = [];\r\n                $scope.users.forEach(function(user) {\r\n                    if (user !== $scope.user) {\r\n                        tempMenu.push({\r\n                            label: user.name,\r\n                            avatar: user.image,\r\n                            handler: function _changeUser() {\r\n                                showUsers = false;\r\n                                $scope.user = user;\r\n                                $scope.menuIcon = menuDown;\r\n                                $rootScope.$broadcast('drawernavigator:original');\r\n                                $rootScope.$broadcast('draweruser:changeuser', user);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                showUsers = true;\r\n                $scope.menuIcon = menuUp;\r\n                $rootScope.$broadcast('drawernavigator:temp', [{items: tempMenu}]);\r\n            }\r\n\r\n            function _hideDrawer($event) {\r\n                $event.preventDefault();\r\n                $event.stopPropagation();\r\n\r\n                $rootScope.$broadcast('drawer:active', false);\r\n            }\r\n        }\r\n    }\r\n})(angular);","/**\r\n * Fernando Franco\r\n * Directive Scrollbar\r\n */\r\n(function (angular) {\r\n    'use strict';\r\n    angular.module('lxpp').directive('lxScroll', lxScroll);\r\n\r\n    lxScroll.$inject = ['$timeout'];\r\n\r\n    function lxScroll($timeout) {\r\n        return {\r\n            link: _link,\r\n            restrict: 'A'\r\n        };\r\n\r\n        ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n        function _link($scope, $element, $attrs, $ctrl, $transclude) {\r\n            $scope.$watch(_checkWidthChange, _onResize);\r\n            $scope.$watch(_checkHeightChange, _onResize);\r\n\r\n            _init();\r\n\r\n            ////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n            function _init() {\r\n                $timeout(function() {\r\n                    $element.scrollbar();\r\n                }, 1000);\r\n            }\r\n\r\n            function _checkWidthChange() {\r\n                return $element.width();\r\n            }\r\n\r\n            function _checkHeightChange() {\r\n                return $element.height();\r\n            }\r\n\r\n            function _onResize() {\r\n                $element.scrollbar();\r\n            }\r\n        }\r\n    }\r\n})(angular);"]}